
# LingoQuest - Continuous Integration Workflow
# Automated testing, linting, and deployment for GitHub Pages
# Compatible with ChatGPT Codex and GitHub Actions

name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  CACHE_KEY: lingoquest-v1

jobs:
  # Code Quality and Testing
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci --prefer-offline --no-audit
      
    - name: Lint JavaScript
      run: npm run lint
      continue-on-error: true
      
    - name: Lint CSS
      run: npm run lint:css
      continue-on-error: true
      
    - name: Run tests
      run: npm run test
      continue-on-error: true
      
    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: false

  # PWA Validation
  pwa-audit:
    name: PWA Audit
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm ci --prefer-offline
      
    - name: Start test server
      run: |
        npm start &
        sleep 10
        
    - name: Run Lighthouse audit
      run: npm run lighthouse
      continue-on-error: true
      
    - name: Upload Lighthouse report
      uses: actions/upload-artifact@v3
      with:
        name: lighthouse-report
        path: lighthouse-report.html

  # Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Run CodeQL analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        
    - name: Perform CodeQL analysis
      uses: github/codeql-action/analyze@v2

  # Build and Deploy
  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: [test, pwa-audit]
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      run: npm ci --prefer-offline
      
    - name: Build for production
      run: npm run build
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifacts
      uses: actions/upload-pages-artifact@v2
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2

  # Notify on completion
  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [test, pwa-audit, security, deploy]
    if: always()
    
    steps:
    - name: Notify success
      if: ${{ needs.deploy.result == 'success' }}
      run: |
        echo "‚úÖ LingoQuest deployed successfully!"
        echo "üåê Live URL: https://alliebaig.github.io/lingoq/"
        
    - name: Notify failure
      if: ${{ failure() }}
      run: |
        echo "‚ùå Deployment failed. Check logs for details."
